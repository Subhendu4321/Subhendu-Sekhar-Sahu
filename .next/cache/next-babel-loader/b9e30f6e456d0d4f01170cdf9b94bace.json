{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/subhendu/nextjs_project/pages/Component/Register.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport './Register.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      margin: '10px'\n    },\n    Register: {\n      backgroundColor: '#fff',\n      minHeight: '381px',\n      width: '400px',\n      margin: '40px auto'\n    }\n  };\n};\n\nvar Register = /*#__PURE__*/function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phoneNumber: ''\n    };\n    _this.handleFirstName = _this.handleFirstName.bind(_assertThisInitialized(_this));\n    _this.handleLastName = _this.handleLastName.bind(_assertThisInitialized(_this));\n    _this.handleEmail = _this.handleEmail.bind(_assertThisInitialized(_this));\n    _this.handlePassword = _this.handlePassword.bind(_assertThisInitialized(_this));\n    _this.handleConfirmPassword = _this.handleConfirmPassword.bind(_assertThisInitialized(_this));\n    _this.doRegister = _this.doRegister.bind(_assertThisInitialized(_this));\n    _this.doBack = _this.doBack.bind(_assertThisInitialized(_this));\n    _this.handlePhoneNumber = _this.handlePhoneNumber.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"handlePhoneNumber\",\n    value: function handlePhoneNumber(e) {\n      this.setState({\n        phoneNumber: e.target.value\n      });\n    }\n  }, {\n    key: \"handleFirstName\",\n    value: function handleFirstName(e) {\n      this.setState({\n        firstName: e.target.value\n      });\n    }\n  }, {\n    key: \"handleLastName\",\n    value: function handleLastName(e) {\n      this.setState({\n        lastName: e.target.value\n      });\n    }\n  }, {\n    key: \"handleEmail\",\n    value: function handleEmail(e) {\n      this.setState({\n        email: e.target.value\n      });\n    }\n  }, {\n    key: \"handlePassword\",\n    value: function handlePassword(e) {\n      this.setState({\n        password: e.target.value\n      });\n    }\n  }, {\n    key: \"handleConfirmPassword\",\n    value: function handleConfirmPassword(e) {\n      this.setState({\n        confirmPassword: e.target.value\n      });\n    }\n  }, {\n    key: \"doRegister\",\n    value: function doRegister(e) {\n      if (this.state.password !== this.state.confirmPassword) {\n        alert(\"Please enter correct password\");\n      } else {\n        alert(\"Registration Successful\");\n        localStorage.setItem(\"firstName\", this.state.firstName);\n        localStorage.setItem(\"lastName\", this.state.lastName);\n        localStorage.setItem(\"email\", this.state.email);\n        localStorage.setItem(\"password\", this.state.password);\n        localStorage.setItem(\"phoneNumber\", this.state.phoneNumber);\n        this.props.history.push(\"./userinfo\");\n      }\n    }\n  }, {\n    key: \"doBack\",\n    value: function doBack() {\n      this.props.history.push(\"./\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return __jsx(Card, {\n        className: classes.Register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, __jsx(CardHeader, {\n        className: \"header\",\n        title: \"Registration Page\",\n        titleTypographyProps: \"Registration Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }), __jsx(CardContent, {\n        className: \"cardContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"firstName\",\n        label: \"First Name\",\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"userid\",\n        style: {\n          padding: 9\n        },\n        value: this.state.firstName,\n        onChange: this.handleFirstName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }), __jsx(TextField, {\n        id: \"lastName\",\n        label: \"Last Name\",\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"password\",\n        style: {\n          padding: 9\n        },\n        value: this.state.lastName,\n        onChange: this.handleLastName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }), __jsx(TextField, {\n        id: \"phoneNum\",\n        label: \"Phone Number\",\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"password\",\n        style: {\n          padding: 9\n        },\n        value: this.state.phoneNumber,\n        onChange: this.handlePhoneNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }), __jsx(TextField, {\n        id: \"email_id\",\n        label: \"Email Id\",\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"userid\",\n        style: {\n          padding: 9\n        },\n        value: this.state.email,\n        onChange: this.handleEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }), __jsx(TextField, {\n        type: \"password\",\n        id: \"Password\",\n        label: \"Password\",\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"password\",\n        style: {\n          padding: 9\n        },\n        value: this.state.password,\n        onChange: this.handlePassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }), __jsx(TextField, {\n        type: \"password\",\n        id: \"confirmPassword\",\n        label: \"Confirm Password\",\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"password\",\n        style: {\n          padding: 9\n        },\n        value: this.state.confirmPassword,\n        onChange: this.handleConfirmPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"buttonClass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        type: \"submit\",\n        style: {\n          padding: 9\n        },\n        onClick: this.doRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, \"Register\"), __jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        type: \"submit\",\n        style: {\n          padding: 9\n        },\n        onClick: this.doBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, \"Back\"))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default withStyles(styles)(withRouter(Register));","map":{"version":3,"sources":["/home/subhendu/nextjs_project/pages/Component/Register.js"],"names":["React","Component","Link","withRouter","Button","Card","CardActions","CardContent","CardHeader","TextField","withStyles","styles","theme","button","margin","Register","backgroundColor","minHeight","width","props","state","firstName","lastName","email","password","confirmPassword","phoneNumber","handleFirstName","bind","handleLastName","handleEmail","handlePassword","handleConfirmPassword","doRegister","doBack","handlePhoneNumber","e","setState","target","value","alert","localStorage","setItem","history","push","classes","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Register.css';\r\nimport { Link,withRouter } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n     margin:'10px'\r\n    },\r\n    Register:{\r\n        backgroundColor: '#fff',\r\n        minHeight: '381px',\r\n        width: '400px',\r\n        margin: '40px auto'\r\n    }\r\n\r\n  \r\n  });\r\n\r\nclass Register extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            firstName:'',\r\n            lastName:'',\r\n            email:'',\r\n            password:'',\r\n            confirmPassword:'',\r\n            phoneNumber:''\r\n        }\r\n        this.handleFirstName = this.handleFirstName.bind(this);\r\n        this.handleLastName = this.handleLastName.bind(this);\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.handleConfirmPassword = this.handleConfirmPassword.bind(this);\r\n        this.doRegister = this.doRegister.bind(this);\r\n        this.doBack = this.doBack.bind(this);\r\n        this.handlePhoneNumber = this.handlePhoneNumber.bind(this);\r\n    }\r\n\r\n    handlePhoneNumber(e){\r\n        this.setState({\r\n            phoneNumber:e.target.value\r\n        })\r\n    }\r\n\r\n    handleFirstName(e){\r\n        this.setState({\r\n            firstName:e.target.value\r\n        })\r\n\r\n    }\r\n    handleLastName(e){\r\n        this.setState({\r\n            lastName:e.target.value\r\n        })\r\n\r\n    }\r\n    handleEmail(e){\r\n        this.setState({\r\n            email:e.target.value\r\n        })\r\n\r\n    }\r\n    handlePassword(e){\r\n        this.setState({\r\n            password:e.target.value\r\n        })\r\n\r\n    }\r\n    handleConfirmPassword(e){\r\n        this.setState({\r\n            confirmPassword:e.target.value\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    doRegister(e){\r\n        if(this.state.password !== this.state.confirmPassword){\r\n            alert(\"Please enter correct password\");\r\n        }\r\n        else{\r\n            alert(\"Registration Successful\");\r\n            localStorage.setItem(\"firstName\",this.state.firstName);\r\n            localStorage.setItem(\"lastName\",this.state.lastName);\r\n            localStorage.setItem(\"email\",this.state.email);\r\n            localStorage.setItem(\"password\",this.state.password);\r\n            localStorage.setItem(\"phoneNumber\",this.state.phoneNumber);\r\n            this.props.history.push(\"./userinfo\")\r\n        }\r\n    }\r\n\r\n    doBack(){\r\n        this.props.history.push(\"./\")\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <Card className={classes.Register}>\r\n                <CardHeader className=\"header\" title=\"Registration Page\" titleTypographyProps=\"Registration Page\">\r\n\r\n                </CardHeader>\r\n\r\n                <CardContent className=\"cardContent\">\r\n                    <TextField id=\"firstName\" label=\"First Name\" variant=\"outlined\" color=\"primary\" className=\"userid\" style={{padding:9}}\r\n                    value={this.state.firstName}\r\n                    onChange={this.handleFirstName}/>\r\n                    <TextField id=\"lastName\" label=\"Last Name\" variant=\"outlined\" color=\"primary\" className=\"password\"style={{padding:9}}\r\n                    value={this.state.lastName}\r\n                    onChange={this.handleLastName}/>\r\n                    <TextField id=\"phoneNum\" label=\"Phone Number\" variant=\"outlined\" color=\"primary\" className=\"password\"style={{padding:9}}\r\n                    value={this.state.phoneNumber}\r\n                    onChange={this.handlePhoneNumber}/>\r\n                    <TextField id=\"email_id\" label=\"Email Id\" variant=\"outlined\" color=\"primary\" className=\"userid\" style={{padding:9}}\r\n                    value={this.state.email}\r\n                    onChange={this.handleEmail}/>\r\n                    <TextField type=\"password\" id=\"Password\" label=\"Password\" variant=\"outlined\" color=\"primary\" className=\"password\"style={{padding:9}}\r\n                    value={this.state.password}\r\n                    onChange={this.handlePassword}/>\r\n                    <TextField type=\"password\" id=\"confirmPassword\" label=\"Confirm Password\" variant=\"outlined\" color=\"primary\" className=\"password\"style={{padding:9}}\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.handleConfirmPassword}/>\r\n\r\n                    <div className=\"buttonClass\">\r\n                        <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" style={{padding:9}} onClick={this.doRegister}>Register</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" style={{padding:9}} onClick={this.doBack}>Back</Button>\r\n                    </div>\r\n\r\n\r\n                    {/* <label>First Name</label>\r\n                    <input type=\"text\" placeholder=\"First Name\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.handleFirstName}></input><br />\r\n\r\n                    <label>Last Name</label>\r\n                    <input type=\"text\" placeholder=\"Last Name\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.handleLastName}></input><br/>\r\n\r\n                    <label>Phone Number</label>\r\n                    <input type=\"number\" placeholder=\"Last Name\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.handleLastName}></input><br/>\r\n\r\n                    <label>Email Id</label>\r\n                    <input type=\"text\" placeholder=\"Enter Email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleEmail}></input><br/>\r\n\r\n                    <label>Pasword</label>\r\n                    <input type=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handlePassword}></input><br/>\r\n\r\n                    <label>Confirm Pasword</label>\r\n                    <input type=\"password\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.handleConfirmPassword}></input><br/> */}\r\n        \r\n                    {/* <button type=\"submit\" className=\"button-1\" onClick={this.doRegister}>Register</button>\r\n                    <button type=\"submit\" className=\"button-2\" onClick={this.doBack}>Back</button> */}\r\n                </CardContent>\r\n                \r\n    \r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Register));"]},"metadata":{},"sourceType":"module"}