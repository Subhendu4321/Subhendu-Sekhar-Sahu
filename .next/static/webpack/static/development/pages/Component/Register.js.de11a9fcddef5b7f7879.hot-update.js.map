{"version":3,"file":"static/webpack/static/development/pages/Component/Register.js.de11a9fcddef5b7f7879.hot-update.js","sources":["webpack:///./pages/Component/Register.js"],"sourcesContent":["import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router'\n// import React,{useState} from 'react';\n\n\n\n\nfunction Register(){\n    const [firstName,setFirstName] = useState(\"\");\n    const [lastName,setLastName] = useState(\"\");\n    const [phoneNum,setPhoneNum] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const [confirmPassword,setConfirmPassword] = useState(\"\");\n\n    const router = useRouter()\n\n\n    const doRegister = () => {\n        if (password !== confirmPassword){\n            alert(\"Registration not successful\");\n        }\n        else{\n            alert(\"Registration successful\");\n            localStorage.setItem(\"firstName\",firstName);\n            localStorage.setItem(\"lastName\",lastName);\n            localStorage.setItem(\"phoneNum\",phoneNum);\n            localStorage.setItem(\"email\",email);\n            localStorage.setItem(\"password\",password);\n            router.push(\"\")\n\n            \n        }\n\n    };\n    return(\n        <Card >\n                <CardHeader className=\"header\" title=\"Registration Page\" titleTypographyProps=\"Registration Page\">\n\n                </CardHeader>\n\n                <CardContent className=\"cardContent\">\n                    <TextField id=\"firstName\" label=\"First Name\" variant=\"outlined\" color=\"primary\" className=\"userid\" style={{padding:9}}\n                    onChange={event => setFirstName(event.target.value)}\n                    \n                    />\n                    <TextField id=\"lastName\" label=\"Last Name\" variant=\"outlined\" color=\"primary\" className=\"password\"style={{padding:9}}\n                    onChange={event => setLastName(event.target.value)}\n                    />\n                    <TextField id=\"phoneNum\" label=\"Phone Number\" variant=\"outlined\" color=\"primary\" className=\"password\"style={{padding:9}}\n                    onChange={event => setPhoneNum(event.target.value)}\n                    />\n                    <TextField id=\"email_id\" label=\"Email Id\" variant=\"outlined\" color=\"primary\" className=\"userid\" style={{padding:9}}\n                    onChange={event => setEmail(event.target.value)}\n                    />\n                    <TextField type=\"password\" id=\"Password\" label=\"Password\" variant=\"outlined\" color=\"primary\" className=\"password\"style={{padding:9}}\n                    onChange={event => setPassword(event.target.value)}\n                    />\n                    <TextField type=\"password\" id=\"confirmPassword\" label=\"Confirm Password\" variant=\"outlined\" color=\"primary\" className=\"password\"style={{padding:9}}\n                    onChange={event => setConfirmPassword(event.target.value)}\n                    />\n\n                    <div className=\"buttonClass\">\n                        <Button variant=\"contained\" color=\"primary\"  type=\"submit\" style={{padding:9}} onClick={doRegister}>Register</Button>\n                        <Button variant=\"contained\" color=\"primary\"  type=\"submit\" style={{padding:9}} >Back</Button>\n                    </div>\n\n\n                    \n                </CardContent>\n                \n    \n            </Card>\n    )\n}\n\n\nexport default Register;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAEA;;;;A","sourceRoot":""}